name: Spring Legacy + Nginx 자동배포

on:
  push:
    branches: ["master"]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      # Docker 이미지 빌드 전
      - name: Maven Build
        run: |
          mvn clean package -DskipTests

      # 2. 도커허브 로그인
      - name: 도커허브에 로그인
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. 이미지 빌드
      - name: 이미지 빌드
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/hightech .

      # 4. 도커허브에 이미지 푸시
      - name: 도커허브에 이미지 푸시
        run: docker push ${{ secrets.DOCKER_USERNAME }}/hightech

      # 2. SSH로 EC2 접속 후 배포
      - name: Deploy on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            APP_DIR=/home/ubuntu/hightech

            # Git clone 또는 pull
            if [ ! -d "$APP_DIR/.git" ]; then
              # 기존 소스 초기화
              sudo rm -rf $APP_DIR
              mkdir -p $APP_DIR
              cd $APP_DIR

              echo "Git 저장소 없음 → 클론 실행"
              sudo git clone https://github.com/poly-hitech/hightech-team.git .
            else
              echo "Git 저장소 있음 → 최신으로 pull"
              cd $APP_DIR
              sudo git reset --hard
              sudo git clean -fd
              sudo git pull origin master
            fi

            # Maven 빌드 (pom.xml 위치 확인)
            cd $APP_DIR   # pom.xml이 있는 디렉터리
            sudo mvn clean package -DskipTests -f pom.xml

            # 기존 컨테이너 중지 및 삭제
            if [ $(sudo docker ps -q -f name=hightech) ]; then
              sudo docker stop hightech
              sudo docker rm -v hightech
            fi



            # 최신 이미지 가져오기
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/hightech

            sudo curl http://localhost/.well-known/acme-challenge/test

            # Docker Compose로 springboot-app + nginx 실행
            cd $APP_DIR
            sudo docker-compose up -d --build oracle-db
            sudo docker-compose up -d --build hightech-backend spring-nginx 

            #톰캣 설정 복사(포트설정)
            echo "${{ secrets.SERVER }}" > home/ubuntu/server.xml
            sudo docker cp ~/server.xml hightech-backend:/usr/local/tomcat/conf/server.xml

            # 톰캣 재시작
            sudo docker exec hightech-backend catalina.sh stop
            sudo docker exec hightech-backend catalina.sh start

            sudo docker logs spring-nginx --tail=50
            sudo docker logs hightech-backend --tail=50
            sudo docker logs oracle-db --tail=50\




